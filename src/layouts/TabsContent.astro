---
export interface Props {
    tabsId: string;
}

const { tabsId } = Astro.props;
---

<tab-id-data data-id={tabsId}></tab-id-data>
<div id={`${tabsId}-contents`}>
    <slot />
</div>

<script>
    class AstroTabs extends HTMLElement {
        constructor() {
            super();

            let tabsId = this.dataset.id;
            console.log("id", tabsId);

            let tabsContainer = document.querySelector(`#${tabsId}`);

            let tabTogglers = tabsContainer.querySelectorAll(`#${tabsId} a`);

            tabsContainer
                .querySelector("#default-tab-container")
                .classList.add(
                    "border-t",
                    "border-r",
                    "border-l",
                    "-mb-px",
                    "bg-white"
                );

            tabTogglers.forEach(function (toggler) {
                toggler.addEventListener("click", function (e) {
                    e.preventDefault();
                    let target = e.target as Element;

                    let tabName = this.getAttribute("href");

                    let tabContents = document.querySelector(
                        `#${tabsId}-contents`
                    );

                    for (let i = 0; i < tabContents.children.length; i++) {
                        tabTogglers[i].parentElement.classList.remove(
                            "border-t",
                            "border-r",
                            "border-l",
                            "-mb-px",
                            "bg-white"
                        );

                        tabContents.children[i].classList.remove("hidden");

                        if ("#" + tabContents.children[i].id === tabName) {
                            continue;
                        }
                        tabContents.children[i].classList.add("hidden");
                    }
                    target.parentElement.classList.add(
                        "border-t",
                        "border-r",
                        "border-l",
                        "-mb-px",
                        "bg-white"
                    );
                });
            });
        }
    }

    customElements.define("tab-id-data", AstroTabs);
</script>
